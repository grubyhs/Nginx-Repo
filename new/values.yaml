# Default values for new.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository: grubyhs/nginxv3
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: "nginx-helm"
fullnameOverride: "nginx-helm-chart"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "testowy"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
limits:
  cpu: 100m
  memory: 128Mi
requests:
  cpu: 100m
  memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

secret:
  enabled: false
  data:
    enc_key: njsprlwa8d64fvnsfnjsk61156aodlmr
    enc_iv: 48914829jfs2
    sql_user: root
    sql_password: password
    redis_password: rpass
    redis_prefix: k34234

configmap:
  enabled: true
  data:
    db_host: nginx-service

sync:
  # use `.sync.state: secret` to store flux's state as an annotation on the secret (instead of a git tag)
  state: git
  # Duration after which sync operations time out (defaults to 1m)
  timeout:
  # Controls how often Flux will apply whatâ€™s in git, to the cluster, absent new commits.
  # Reducing this interval below a minute or so may hinder Flux, since syncs can take tens of seconds,
  # leaving not much time to do other operations.
  #  interval: "5m"